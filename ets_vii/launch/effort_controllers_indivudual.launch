<?xml version="1.0"?>
<launch>
  <arg name="paused" default="false"/>
  <arg name="gazebo_gui" default="true"/>
  <arg name="initial_joint_positions" doc="Initial joint configuration of the robot"
       default=" -J joint1 0 -J joint2 0 -J joint3 0 -J joint4 0 -J joint5 0 -J joint6 0"/>

  
   <!-- overwriting these args -->
  <arg name="debug" default="false" />
  <arg name="gui" default="true" />
  <arg name="pause" default="false" />
  <arg name="world" default="$(find ets_vii)/worlds/no_gravity.world" />

  <!-- include gazebo_ros launcher -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
          <arg name="world_name" value="$(arg world)" />
          <arg name="verbose" value="true" />
          <arg name="debug" value="$(arg debug)" />
          <arg name="gui" value="$(arg gui)" />
          <arg name="paused" value="$(arg pause)" />
          <arg name="use_sim_time" value="true" />
  </include>
            

  <!-- send robot urdf to param server -->
  <param name="robot_description" command="xacro  '$(find ets_vii)/urdf/ets_vii_gazebo.xacro'" />

  <!-- unpause only after loading robot model -->
  <arg name="unpause" value="$(eval '' if arg('paused') else '-unpause')" />
  <!-- push robot_description to factory and spawn robot in gazebo at the origin, change x,y,z arguments to spawn in a different position -->
  <arg name="world_pose" value="-x 0 -y 0 -z 2" />
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot $(arg unpause) $(arg world_pose) $(arg initial_joint_positions)"
    respawn="false" output="screen" />

  <!-- Load joint controller parameters for Gazebo -->
  <rosparam command="load" file="$(find ets_vii)/config/gazebo_controllers.yaml" />
  <!-- Spawn Gazebo ROS controllers -->
  <node name="gazebo_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller" />
  
  <!-- Load ROS controllers -->
  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam command="load" file="$(find ets_vii)/config/effort_controllers.yaml" />

  <!-- Load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" args="joint1_position_controller 
                          joint2_position_controller 
                          joint3_position_controller
                          joint4_position_controller
                          joint5_position_controller
                          joint6_position_controller" />

   <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen" />

</launch>
